<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>strimzi</artifactId>
        <groupId>io.strimzi</groupId>
        <version>0.18.0-RC1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>systemtest</artifactId>

    <properties>
        <skipTests>true</skipTests>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>operator-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.valid4j</groupId>
            <artifactId>json-path-matchers</artifactId>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>test</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-model</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${jupiter.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit.platform.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.joshka</groupId>
            <artifactId>junit-json-params</artifactId>
            <version>${junit-json-params.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>${javax.json-api.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>${javax.json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.12</artifactId>
            <version>${kafka.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
        </dependency>        
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${json-path.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-kafka-client</artifactId>
            <version>${vertx.kafka.client}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-client</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-common</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-junit5</artifactId>
            <version>${vertx.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <version>${netty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>kafka-oauth-common</artifactId>
            <version>${strimzi-oauth.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.strimzi</groupId>
            <artifactId>kafka-oauth-client</artifactId>
            <version>${strimzi-oauth.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${fasterxml.jackson-databind.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <configuration>
                    <doclint>none</doclint>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>..</directory>
                <includes>
                    <include>kafka-versions.yaml</include>
                </includes>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>acceptance</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>acceptance &amp; !flaky</groups>
            </properties>
        </profile>
        <profile>
            <id>regression</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>regression &amp; !flaky &amp; !cci_flaky</groups>
            </properties>
        </profile>
        <profile>
            <id>all</id>
            <properties>
                <skipTests>false</skipTests>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>flaky</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>flaky</groups>
            </properties>
        </profile>
        <profile>
            <id>upgrade</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>upgrade &amp; !flaky</groups>
            </properties>
        </profile>
        <profile>
            <id>travis</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>travis</groups>
            </properties>
        </profile>
        <profile>
            <id>bridge</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>bridge</groups>
            </properties>
        </profile>
        <profile>
            <id>scalability</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>scalability &amp; !flaky</groups>
            </properties>
        </profile>
        <profile>
            <id>specific</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>specific</groups>
            </properties>
        </profile>
        <profile>
            <id>nodeport</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>nodeport</groups>
            </properties>
        </profile>
        <profile>
            <id>loadbalancer</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>loadbalancer</groups>
            </properties>
        </profile>
        <profile>
            <id>networkpolicies</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>networkpolicies</groups>
            </properties>
        </profile>
        <profile>
            <id>prometheus</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>prometheus</groups>
            </properties>
        </profile>
        <profile>
            <id>tracing</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>tracing</groups>
            </properties>
        </profile>
        <profile>
            <id>oauth</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>oauth</groups>
            </properties>
        </profile>
        <profile>
            <id>cruisecontrol</id>
            <properties>
                <skipTests>false</skipTests>
                <groups>cruisecontrol</groups>
            </properties>
        </profile>
    </profiles>
</project>